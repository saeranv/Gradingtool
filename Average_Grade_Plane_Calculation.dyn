{
  "Uuid": "3c9d0464-8643-5ffe-96e5-ab1769818209",
  "IsCustomNode": false,
  "Description": "",
  "Name": "Average_Grade_Plane_Calculation",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Nodes.DSFaceSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "77c402e3-d4cb-4d74-b672-35f27cd6bebd-0006c988:1:SURFACE"
      ],
      "Id": "2e5a1c04039840818262ceb733992b77",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0a0ebb0ac1e345b6b89fa1bdcb01bdc5",
          "Name": "Surface",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "1b2c0198a31449f0a91b723b26decb72",
      "Inputs": [
        {
          "Id": "7011fd5610674918ae017bbc0bcf92a2",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4909990a42704b358841a2530b0f7bde",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d9df028e5fb542c08b3620e31ff9b047",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Topography.Points",
      "Id": "2c556b02c4fa4f6fbcadabb78bfd3b82",
      "Inputs": [
        {
          "Id": "b078f5939d2b4d3a96dc3d5c92103293",
          "Name": "topography",
          "Description": "Revit.Elements.Topography",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "241fb658565d445ba09b7b72c2fdecb0",
          "Name": "Point[]",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The set of points from which this TopographySurface is constructed.\n\nTopography.Points: Point[]"
    },
    {
      "ConcreteType": "Dynamo.Nodes.DSModelElementSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "480eb069-e66b-4112-9ea7-bf22034ec33e-00063ca2"
      ],
      "Id": "79706b4eeb14427bb66573b8786e3b2d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "de40c2c208744d42a4b2f4f7294d1bea",
          "Name": "Element",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nclr.AddReference('RevitAPI') #import clr\r\nfrom Autodesk.Revit.DB import *\r\n\r\nimport sys\r\nreload(sys)\r\nsys.setdefaultencoding('utf-8')\r\nsys.path.append(r\"C:\\Program Files (x86)\\IronPython 2.7\\Lib\")\r\nsys.path = sorted(sys.path, key=lambda p: p.find(\"Python27\"))\r\n\r\nimport math\r\nimport uuid\r\nimport cPickle\r\nimport zipfile\r\nimport os\r\nimport subprocess\r\nimport getpass\r\nimport System\r\n\r\ntry:\r\n    System.Net.ServicePointManager.SecurityProtocol = System.Net.SecurityProtocolType.Tls12\r\nexcept AttributeError:\r\n    # TLS 1.2 not provided by MacOS .NET Core; revert to using TLS 1.0\r\n    System.Net.ServicePointManager.SecurityProtocol = System.Net.SecurityProtocolType.Tls\r\n\r\n\r\ndef download_file(url, targetDirectory):\r\n    print targetDirectory\r\n    localFilePath = os.path.join(targetDirectory, os.path.basename(url))\r\n    client = System.Net.WebClient()\r\n    client.DownloadFile(url, localFilePath)\r\n    return localFilePath\r\n\r\ndef check_or_make_directory(dir_path):\r\n    if not os.path.isdir(dir_path):\r\n        try:\r\n            os.mkdir(dir_path)\r\n        except:\r\n            raise Exception(\"Folder can't be constructed: '{}' can't be made.\".format(dir_path))\r\n\r\ndef unzip_file(zipFile, targetDirectory):\r\n    with zipfile.ZipFile(zipFile) as zf:\r\n        for f in zf.namelist():\r\n            if f.endswith('/'):\r\n                try: os.makedirs(f)\r\n                except: pass\r\n            else:\r\n                zf.extract(f, targetDirectory)\r\n\r\ndef del_directory(dir, rmdir = True):\r\n    try:\r\n        if dir[-1] == os.sep: dir = dir[:-1]\r\n        files = os.listdir(dir)\r\n        for file in files:\r\n            if file == '.' or file == '..': continue\r\n            path = dir + os.sep + file\r\n            if os.path.isdir(path):\r\n                del_directory(path)\r\n            else:\r\n                os.unlink(path)\r\n        if rmdir: os.rmdir(dir)\r\n    except:\r\n        print \"Delete old directory failed\"\r\n\r\ndef set_directory_structure(update_tool, cache_dir_parent, pkg_name, url):\r\n    \"\"\"\r\n    Makes directory to store cache files if it doesn't exist.\r\n    Copies python package over from git.\r\n    \"\"\"\r\n\r\n    # cache directory\r\n    cache_dir = r\"kt_cpython_cache\"\r\n    cache_path = os.path.join(cache_dir_parent, cache_dir)\r\n\r\n    # pkg directory\r\n    pkg_parent_path = os.path.join(cache_path, pkg_name)\r\n    pkg_path = os.path.join(pkg_parent_path, pkg_name + \"-master\")\r\n\r\n    # if package exists\r\n    if os.path.isdir(pkg_path):\r\n        # delete pkg_path if you want to update\r\n        if update_tool:\r\n            del_directory(pkg_parent_path, rmdir = True)\r\n            print \"Deleting \", pkg_path\r\n    # Check again if package doesn't exists, download from repo\r\n    if not os.path.isdir(pkg_path):\r\n        # cache directory\r\n        check_or_make_directory(cache_path)\r\n        # pacakge parent directory\r\n        check_or_make_directory(pkg_parent_path)\r\n        # download pkg zip\r\n        zip_file_path = download_file(url, pkg_parent_path)\r\n        print \"Downloading the source code...\"\r\n        # unzip pkg\r\n        unzip_file(zip_file_path, pkg_parent_path)\r\n        print \"Downloaded!\"\r\n    return pkg_path\r\n\r\ndef run_python_process(p, program, argument, working_directory):\r\n    argstr = \"\"\r\n    print program\r\n    print argument\r\n    print working_directory\r\n    PIPE = subprocess.PIPE\r\n    STDOUT = subprocess.STDOUT\r\n    p = subprocess.Popen([program, argument, argstr], cwd=working_directory, shell=True, stdin=PIPE, stdout=PIPE, stderr=STDOUT)\r\n    #print p.communicate()\r\n    script_output = p.stdout.read()\r\n    streamdata = p.communicate()[0] # need this to make sure process has finished\r\n    exitcode = p.returncode\r\n\r\n    if exitcode != 0:\r\n        print \"Command failed with return code\", exitcode\r\n\r\n    #script_output = program + argument + working_directory\r\n\r\n    return p, script_output, exitcode\r\n\r\ndef send_to_pickle(znames_, aval_dict_, apts_mtx_, exp_, param_, cache_dir_):\r\n\r\n    exp_run_name = experiment_run_name(exp_, param_)\r\n\r\n    for i,apts_in_zone in enumerate(apts_mtx_):\r\n\r\n        for j,apt in enumerate(apts_in_zone):\r\n            apt = rs.coerce3dpoint(apt)\r\n            apts_mtx_[i][j] = [apt[0],apt[1],apt[2]]\r\n\r\n    #print(apts_mtx_[-1])\r\n    #print(len(apts_mtx_[-1]))\r\n\r\n    pkl_mtx = [znames_, apts_mtx_, aval_dict_]\r\n\r\n    return pickle(pkl_mtx, cache_dir_, exp_run_name + \".pkl\")\r\n\r\ndef pickle(data, cpickle_path, cpickle_name):\r\n    pkl_file_path = os.path.join(cpickle_path, cpickle_name)\r\n\r\n    # Pickle objects, protocol 1 b/c binary file\r\n    with open(pkl_file_path, \"wb\") as outf:\r\n        cPickle.dump(data, outf)\r\n\r\n    return pkl_file_path\r\n\r\ndef unpickle(pkl_file_path):\r\n    \"\"\" Read non-binary picle \"\"\"\r\n    with open(pkl_file_path, \"r\") as inf:\r\n        unpickled_object = cPickle.load(inf)\r\n        return unpickled_object\r\n\r\ndef rvt2py(rhpt):\r\n    if isinstance(rhpt, (list,tuple)):\r\n        rhpt_lst = rhpt\r\n        return [(rhpt.X, rhpt.Y, rhpt.Z) for rhpt in rhpt_lst]\r\n    else:\r\n        return (rhpt.X, rhpt.Y, rhpt.Z)\r\n\r\ndef py2rvt(pypt):\r\n    if isinstance(pypt, (list,tuple)):\r\n        pypt_lst = pypt\r\n        return [XYZ(pypt[0],pypt[1],pypt[2]) for pypt in pypt_lst]\r\n    else:\r\n        return XYZ(pypt[0],pypt[1],pypt[2])\r\n\r\n\r\ndef main(p, topo_pts, topo_crv, bldg_crv, anaconda_path, perpendicular_dist, spacing_dist, update_tool = False):\r\n    msg = \"Script didn't run.\"\r\n    boundpts = None\r\n    number = None\r\n\r\n\r\n    if not os.path.isdir(anaconda_path):\r\n        user_name = getpass.getuser()\r\n        anaconda_path = \"C:\\\\Users\\\\{}\\\\AppData\\\\Local\\\\Continuum\\\\miniconda2\\\\\".format(user_name)\r\n\r\n    if not os.path.isdir(anaconda_path):\r\n        where_path = \"Cannot find path to mininaconda at {}.\".format(anaconda_path)\r\n        raise Exception( where_path +\r\n                        \" It is usually found in C:\\Users\\%USERNAME%\\AppData\\Local\\Continuum\\miniconda2. \"\r\n                        \"Try inputting it manually\")\r\n\r\n\r\n    # Find/make all these\r\n    program = os.path.join(anaconda_path, \"python.exe\")\r\n    pkg_name = \"Gradingtool\"\r\n    pkg_url = \"https://github.com/saeranv/{}/archive/master.zip\".format(pkg_name)\r\n    \r\n    cache_dir_parent = os.path.join(anaconda_path, \"pkgs\")\r\n    cache_gh_pklname = \"listen_app.pkl\"\r\n    cache_app_pklname = \"listen_gh.pkl\"\r\n    \r\n    package_path = set_directory_structure(update_tool, cache_dir_parent, pkg_name, pkg_url)\r\n    pkg_cache_dir = os.path.join(package_path, \"cache\")\r\n    \r\n    \r\n    # Pickle Grasshopper geometry\r\n\r\n    bldg_crvpts = rvt2py(bldg_crv)\r\n    topo_crvpts = rvt2py(topo_crv)\r\n    topo_pts = [rvt2py(pt) for pt in topo_pts]\r\n\r\n    msg = bldg_crvpts\r\n    D = {}\r\n    D[\"note\"] = \"testing from dynamo\"\r\n    D[\"curves\"] = bldg_crvpts\r\n    D[\"points\"] = topo_pts\r\n    D[\"topocrvs\"] = topo_crvpts\r\n    D[\"perpendicular_dist\"] = perpendicular_dist\r\n    D[\"spacing_dist\"] = spacing_dist\r\n\r\n    cachefpath = pickle(D, pkg_cache_dir, cache_gh_pklname)\r\n\r\n    # Run run.py\r\n    argument = os.path.join(package_path, pkg_name.lower(), \"run.py\")\r\n    working_directory = package_path\r\n\r\n    p, std_out, exit_code = run_python_process(p, program, argument, working_directory)\r\n    msg = std_out\r\n\r\n    # hack\r\n    if exit_code != 0:\r\n        # hack\r\n        program_anaconda = os.path.join(anaconda_path.replace(\"miniconda2\", \"Anaconda2\"), \"python.exe\")\r\n        p, std_out, exit_code = run_python_process(p, program_anaconda, argument, working_directory)\r\n        msg = std_out\r\n\r\n    if exit_code != 0:\r\n        return p, None, None, msg\r\n\r\n    pkl_file = os.path.join(pkg_cache_dir, cache_app_pklname)\r\n    D = unpickle(pkl_file)\r\n    boundpts = D[\"closepts\"]\r\n    number = D[\"number\"]\r\n    #boundpts = [xyz.ToXyz()for xyz in py2rvt(boundpts)]\r\n    boundpts = py2rvt(boundpts)\r\n\r\n\r\n    return p, boundpts, number, msg\r\n\r\n# Rename inputs\r\nupdate_ = False\r\nanaconda_path_ = \"\"\r\n_run = IN[0]\r\n_topo_pts = IN[1]\r\n_topo_crv = IN[2]\r\n_bldg_crv = IN[3]\r\n_perp_dist = IN[4]\r\n_space_dist = IN[5]\r\n\r\np = None\r\n\r\nif _run:\r\n    result = main(p, _topo_pts, _topo_crv, _bldg_crv, anaconda_path_, _perp_dist, _space_dist, update_tool = update_)\r\n    p, boundpts, grade_avg, msg = result\r\n\r\n    OUT = [msg, grade_avg, boundpts]\r\nelse:\r\n    if p!=None:\r\n        p.kill()\r\n",
      "VariableInputPorts": true,
      "Id": "87fdb60b9fe24224b049e04b2f2cc29c",
      "Inputs": [
        {
          "Id": "6193f089fec1469cac822b4ca70107ef",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "78f731fab97f452e8f495962ceddb6b8",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a3f77ea085934af3aec7058c9e1323bd",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "91cf8f0362b14399a651cde52f33c290",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3c0192c262364364bb0ee7bcf36be6c1",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7c4545ac260a4072a0591301e8a7f857",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fca8c654f90e42c59556ce9c2582e5d5",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "af49de498a66466697546360918b36e8",
      "Inputs": [
        {
          "Id": "a3be0db894a847349b60e7b9e9d2b530",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "64e41a0a14274e6581044205a3f97cf5",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "4d99d73b044143e7b9c9d7f9a9583554",
      "Inputs": [
        {
          "Id": "b79bcc3fa0cf416aa20f0f2461a1913f",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b3a19fbec18e49a1a085bbf96c9e06bd",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Nodes.DSFaceSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "77c402e3-d4cb-4d74-b672-35f27cd6bebd-0006c6d9:1:SURFACE"
      ],
      "Id": "08583251138541a7995014b3d74ff2de",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f4f74b0799184a78adfa99e7afe76ad4",
          "Name": "Surface",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "44117eaf542b4ab58a1aa05456402a6e",
      "Inputs": [
        {
          "Id": "abf13f95732846dfae453e622d90bd0d",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7c2097019c0943bc9b8e744648b5e5bc",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "8c83a87c0f794420979a5c8a8e02d398",
      "Inputs": [
        {
          "Id": "59fabd84e7284f8c99a0dc4c5fac6832",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "61b923d1af5e42ec88fbee05421be92a",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "6637a91e0ba04c17a7f2271f9bc619d7",
      "Inputs": [
        {
          "Id": "3f1404b87ae64ea9ac408099ef959467",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0885178759bc47858976d3b1e40599b2",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2a045795849a4060b8bf8cb8eb130614",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "b658e98f8d3f4fa6ad2e950ececc33df",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "13df2ff490964ff197dab0e8e4d1f327",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 2,
      "MaximumValue": 2,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "b1dffc12a6804069aada8a57a020c5c0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "eccd7aae8c914335bad3e1b18bb61cf6",
          "Name": "",
          "Description": "Int32",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "8506f1c5e06e4bb694391a0300e29d97",
      "Inputs": [
        {
          "Id": "5f5458c1beca439aa17d9bc14977ed0a",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b46f2a0d14024e87b5bfcc5fc15e01ea",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2643f17271804359a0a3b1e94f42e627",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\nX,Y,Z = [],[],[]\r\n\r\nfor pt in IN[0]:\r\n\tX.append(pt.X)\r\n\tY.append(pt.Y)\r\n\tZ.append(pt.Z)\r\n\r\nOUT = [X,Y,Z]\r\n",
      "VariableInputPorts": true,
      "Id": "22379a2e8bde4ea292d86e1849c6c6ba",
      "Inputs": [
        {
          "Id": "afd7f1bcfe7f4b25ba0890791d2d989a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f599b7d77df243e387f0ba28b81b3a7a",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "9f29c7af148148879e2ce8db1a692969",
      "Inputs": [
        {
          "Id": "9fa9fecd40a34816b944641a2cc07993",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "611f7e4328334b6ab8b65ac7696a0a5a",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b7f2b3c5d0a74ed694a1a1a734c3171e",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 0,
      "MaximumValue": 2,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "7b9815f386d04433a25ba160a0539730",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "65e5b6c7e6494a4da68378f8d7f8d590",
          "Name": "",
          "Description": "Int32",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 1,
      "MaximumValue": 2,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "d6c24cfd5e3b4d609e6b8e2507038f55",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1974d97eaf8945fc9db9c37b3a83d9e6",
          "Name": "",
          "Description": "Int32",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "fe2f36ada0c7412492f09bcc9360fe76",
      "Inputs": [
        {
          "Id": "c3d9c08f302540d580b1b5c9c2fd0ede",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8db69a6bce9e4e9797bd5e43c8b5c79c",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "971b9be070d2426e8e8e1fc5b9f7d56c",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "4cc229eaab5249c69797cccbbdba72f1",
      "Inputs": [
        {
          "Id": "e613e9dcbd114f548d6e3bdfb8e36ead",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "638af41625b8462fae6b550713d1c941",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "33c711fd03e748659f3d5807a22219d2",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 2,
      "MaximumValue": 2,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "b438d79b97e74c3cbcbdb206d2249e2d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3aed618542a44d729c6f01f580353ba7",
          "Name": "",
          "Description": "Int32",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double",
      "Id": "0b8944adcb8d41ffa759cd773d097c13",
      "Inputs": [
        {
          "Id": "1ebe6fc02a7e4ec7b532d31be15798d6",
          "Name": "x",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "455a66e4436a4ec783923a0522c7a94e",
          "Name": "y",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e69d25e95ad84ed0a78b0dcdd5f4bee3",
          "Name": "z",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e60e4c720c8f4d8a80c26d5da4ca622f",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Point given 3 cartesian coordinates\n\nPoint.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Point"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 1,
      "MaximumValue": 2,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "26324bb7bdbc4312a557cdeaafc6625a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c9fc388662d842149d711e142e0530e0",
          "Name": "",
          "Description": "Int32",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "c374fa2f1d2c4f959945105f8ab246b1",
      "Inputs": [
        {
          "Id": "34f58a25cd3c4cf09c4eb90acc993301",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7ea2ce70a9de44febf6a835016f90dc9",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d43a2f4e745a4e2b9e562be1489c486c",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "012e195f025647558ed398191a52f8ad",
      "Inputs": [
        {
          "Id": "62b618400e6b499895eb1452b084ef34",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "88e8041a54604ff8ba375b9cfd5662a0",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a0e47439c03945099a4d390d3060a4e1",
      "Inputs": [
        {
          "Id": "c81df43cb3da4f529fca1489544db57f",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3243140f5c4f4134b7c9e83413ae897b",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Topography.Mesh",
      "Id": "048030181b534e01ab99436aef7d2cab",
      "Inputs": [
        {
          "Id": "90820bf44b954a1ab77257bcfdc0c94a",
          "Name": "topography",
          "Description": "Revit.Elements.Topography",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "284c1f64321b4d10a210eee7528ac27f",
          "Name": "Mesh",
          "Description": "Mesh",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the underlying triangular Mesh from the Topography\n\nTopography.Mesh: Mesh"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 10.0,
      "Id": "c2896c560bf644b696bed641d73672d8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "eb5894cace8548d29b69512620ade706",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 10.0,
      "Id": "c113a854d4e24036b3fad6e54baa29ed",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "926bfef2f07242dfb3a5a9b3d0bec7eb",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "e91c90cbe87845219bfa144bcdbc219e",
      "Inputs": [
        {
          "Id": "8df9f89bb3824625ac24b7156cc6b314",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7acc6cd4ea464411beaf1cd4783e30b9",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "034f84d6caa644e1972e76f7b410fc9d",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 100.0,
      "MinimumValue": 0.0,
      "StepValue": 0.1,
      "InputValue": 3.0,
      "Id": "c2b941b44660440696dd917502308082",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e071848f80fe48b0a112325f3e213572",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces numeric values."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "43076030a3524459aeb5a7b4eda9a4f7",
      "Inputs": [
        {
          "Id": "3784a84b319d471a8729a74599772835",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "16f91e45d809406bb9fc0d5f50d28e9e",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "222440153ca44b50aca986861d3d0ef5",
      "Inputs": [
        {
          "Id": "7e40748978a24b6dabcddcdb65f2986d",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "32ca362ffdbf40f9bb36016309b07b16",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "3a4604e7b321492ea124507725c8bbd1",
      "Inputs": [
        {
          "Id": "5d74a82aa2be4710a89fe1f76580e1ae",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e891484dc194a32a9dd31a4aed88f2a",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\nnum = IN[0]\r\nOUT = round((num/1000.0) - IN[1], 2)",
      "VariableInputPorts": true,
      "Id": "f9ba0b5473374359bfb2e234eddffca6",
      "Inputs": [
        {
          "Id": "4879e18a72e5479ebbf2edea39994a9c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f2a3ff36976f4cc5bb95473827fd4eeb",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cb9c087a81824a3689449d9e52bf0493",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "90fd55c61b6c46eea5004a26621722a2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "691dbc9519e14bd789c556455f4c96d5",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Polygon.ByPoints@Autodesk.DesignScript.Geometry.Point[]",
      "Id": "fcb773172143422095e0cb3c44ad7407",
      "Inputs": [
        {
          "Id": "b19959bd132149329cab561c7a5fc96a",
          "Name": "points",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a4c487a382c34260a908fade9e95e0ed",
          "Name": "Polygon",
          "Description": "Polygon",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Construct a Polygon Curve by connecting Points.\n\nPolygon.ByPoints (points: Point[]): Polygon"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nclr.AddReference('RevitAPI') #import clr\r\nfrom Autodesk.Revit.DB import *\r\n\r\nimport sys\r\nreload(sys)\r\nsys.setdefaultencoding('utf-8')\r\nsys.path.append(r\"C:\\Program Files (x86)\\IronPython 2.7\\Lib\")\r\nsys.path = sorted(sys.path, key=lambda p: p.find(\"Python27\"))\r\n\r\nimport math\r\nimport uuid\r\nimport cPickle\r\nimport zipfile\r\nimport os\r\nimport subprocess\r\nimport getpass\r\nimport System\r\n\r\ntry:\r\n    System.Net.ServicePointManager.SecurityProtocol = System.Net.SecurityProtocolType.Tls12\r\nexcept AttributeError:\r\n    # TLS 1.2 not provided by MacOS .NET Core; revert to using TLS 1.0\r\n    System.Net.ServicePointManager.SecurityProtocol = System.Net.SecurityProtocolType.Tls\r\n\r\n\r\n\r\ndef download_file(url, targetDirectory):\r\n    localFilePath = os.path.join(targetDirectory, os.path.basename(url))\r\n    client = System.Net.WebClient()\r\n    client.DownloadFile(url, localFilePath)\r\n    return localFilePath\r\n\r\ndef check_or_make_directory(dir_path):\r\n    if not os.path.isdir(dir_path):\r\n        try:\r\n            os.mkdir(dir_path)\r\n        except:\r\n            raise Exception(\"Folder can't be constructed: '{}' can't be made.\".format(dir_path))\r\n\r\ndef unzip_file(zipFile, targetDirectory):\r\n    #unzip the file\r\n    with zipfile.ZipFile(zipFile) as zf:\r\n        for f in zf.namelist():\r\n            if f.endswith('/'):\r\n                try: os.makedirs(f)\r\n                except: pass\r\n            else:\r\n                zf.extract(f, targetDirectory)\r\n\r\ndef del_directory(dir, rmdir = True):\r\n    try:\r\n        if dir[-1] == os.sep: dir = dir[:-1]\r\n        files = os.listdir(dir)\r\n        for file in files:\r\n            if file == '.' or file == '..': continue\r\n            path = dir + os.sep + file\r\n            if os.path.isdir(path):\r\n                del_directory(path)\r\n            else:\r\n                os.unlink(path)\r\n        if rmdir: os.rmdir(dir)\r\n    except:\r\n        print \"Delete old directory failed\"\r\n\r\n\r\ndef set_directory_structure(update_tool, cache_dir_parent, pkg_name, url):\r\n    \"\"\"\r\n    Makes directory to store cache files if it doesn't exist.\r\n    Copies python package over from git.\r\n    \"\"\"\r\n\r\n    # cache directory\r\n    cache_dir = r\"kt_cpython_cache\"\r\n    cache_path = os.path.join(cache_dir_parent, cache_dir)\r\n\r\n    # pkg directory\r\n    pkg_parent_path = os.path.join(cache_path, pkg_name)\r\n    pkg_path = os.path.join(pkg_parent_path, pkg_name + \"-master\")\r\n\r\n\r\n    # if package exists\r\n    if os.path.isdir(pkg_path):\r\n        # delete pkg_path if you want to update\r\n        if update_tool == True:\r\n            del_directory(pkg_parent_path, rmdir = True)\r\n            print \"Deleting \", pkg_path\r\n\r\n    # Check again if package doesn't exists, download from repo\r\n    if not os.path.isdir(pkg_path):\r\n            # cache directory\r\n            check_or_make_directory(cache_path)\r\n            # pacakge parent directory\r\n            check_or_make_directory(pkg_parent_path)\r\n\r\n            # download pkg zip\r\n            zip_file_path = download_file(url, pkg_parent_path)\r\n            print \"Downloading the source code...\"\r\n\r\n            # unzip pkg\r\n            unzip_file(zip_file_path, pkg_parent_path)\r\n\r\n            print \"Downloaded!\"\r\n\r\n    #run_bat_file(pkg_path)\r\n\r\n    return pkg_path\r\n\r\ndef run_bat_file(directory = \"C:/\"):\r\n    directory = 'C:/'\r\n    batfpath = os.path.join(directory, 'python_packages.bat')\r\n    with open(batfpath, 'w') as OPATH:\r\n        OPATH.writelines(['conda install numpy\\n','y\\n','pause'])\r\n\r\n    run_python_process(batfpath, directory)\r\n\r\n\r\ndef run_python_process(p, program, working_directory, argument = \"\", argstr = \"\"):\r\n    #print program\r\n    #print argument\r\n    #print working_directory\r\n    PIPE = subprocess.PIPE\r\n    STDOUT = subprocess.STDOUT\r\n    p = subprocess.Popen([program, argument, argstr], cwd=working_directory, shell=True, stdin=PIPE, stdout=PIPE, stderr=STDOUT)\r\n    #print p.communicate()\r\n    script_output = p.stdout.read()\r\n    print script_output\r\n\r\n\r\ndef main(anaconda_path, update_tool = False):\r\n    if anaconda_path is None:\r\n        user_name = getpass.getuser()\r\n        anaconda_path = \"C:\\\\Users\\\\{}\\\\AppData\\\\Local\\\\Continuum\\\\miniconda2\\\\\".format(user_name)\r\n\r\n    if not os.path.isdir(anaconda_path):\r\n        raise Exception(\"Cannot find path to Anaconda. It is usually found in C:\\Users\\%USERNAME%\\AppData\\Local\\Continuum\\miniconda2. Try inputting it manually\")\r\n        return\r\n\r\n    # Find/make all these\r\n    program = os.path.join(anaconda_path, \"python.exe\")\r\n    pkg_name = \"Gradingtool\"\r\n    pkg_url = \"https://github.com/saeranv/{}/archive/master.zip\".format(pkg_name)\r\n\r\n    cache_dir_parent = os.path.join(anaconda_path, \"pkgs\")\r\n    cache_gh_pklname = \"listen_app.pkl\"\r\n    cache_app_pklname = \"listen_gh.pkl\"\r\n\r\n    package_path = set_directory_structure(update_tool, cache_dir_parent, pkg_name, pkg_url)\r\n    pkg_cache_dir = os.path.join(package_path, \"cache\")\r\n\r\n\r\n    return 'Success'\r\n\r\nanaconda_path_ = IN[1]\r\nupdate_ = IN[0]\r\n\r\nif IN[0] == True:\r\n    if anaconda_path_ == \"\": anaconda_path_ = None\r\n    result = main(None, update_tool = update_)\r\n    OUT = result",
      "VariableInputPorts": true,
      "Id": "bfd8d254a8714147b81115c7ebfea5a5",
      "Inputs": [
        {
          "Id": "fd60dc394c6c4aae9666eecbb55fcbac",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c7fe272ae0404308aeee82de0505cb59",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5c8a92b334ac4455a3718ebc1dff09ad",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "3959e99c4d8e4688ba50c1ccf093fa2e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "961835897653404ba27b00974b0e8805",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "82410959937f4754afb4d06016016a63",
      "Inputs": [
        {
          "Id": "a35b525f30204a59834a25e6fdf39284",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "94aa0735acd44f7682fcb6ac2ccfe220",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "\"\"",
      "Id": "d2831a9be8fd44d6bbf5870c9eaee35b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b56822d452184977b4b87193131337af",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\npts = IN[0]\r\nzlst = [pt.Z for pt in pts]\r\nOUT = sorted(zlst)[0]/1000.0",
      "VariableInputPorts": true,
      "Id": "1549e08d4041455c9c5fdabe46c36f90",
      "Inputs": [
        {
          "Id": "3e9274089bd346bc97c64f8accde0002",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5ab1f4b654d14fafa9718f947867efd7",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nL = []\r\nLOWPTZ = IN[1]\r\nREFHT = IN[2]\r\ngpa = IN[0]\r\n\r\nOUT = (gpa - LOWPTZ + REFHT)",
      "VariableInputPorts": true,
      "Id": "9a407e67b9b9487bb06280ee05c6f185",
      "Inputs": [
        {
          "Id": "9f00bb9dd3d44371a045091fcc052e8b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c0a3e7228f345ee9f8b54100a749609",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0878e191b0ec4c2b91bc9cd1c838d3c5",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "da62afcbf72848c6bb36bccec624112c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "aedd83cce8974795b845e298f4694422",
      "Inputs": [
        {
          "Id": "b897aa142a8a40e88053782bcbe994e2",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "893d2b8b6fe04271bbf3e2eed6cf97a3",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "117.23;",
      "Id": "9ca1c0b9fdbf4fb5b346218b176dbea1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e882d699be5e4131b9b15af5095da6fa",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "46a3a667-ec7a-49ed-8675-ed77333ecd8e",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "7700cdf381b74ae48179cb2cecfe07b7",
      "Inputs": [
        {
          "Id": "1c326f540dee488b9f5080e0ae2bff58",
          "Name": "input",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "83f0192d5f0a499cbf3cfb34b9019ffa",
          "Name": "addIndexes",
          "Description": "bool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fc75cd1c58cd4af9b17fdfec09f02672",
          "Name": "reset",
          "Description": "bool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0b4dce7c7e25400dbe3d2a749c9877ea",
          "Name": "str",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node that serializes the input information and presents it in a resizable text window."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Average@double[]",
      "Id": "3cf4b5b51eea4a898349c507fbe7e40c",
      "Inputs": [
        {
          "Id": "7de13b85a24a4d36bba5670c9488eb81",
          "Name": "numbers",
          "Description": "List of numbers to be averaged.\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "59628490b87a4c8ea9e6a0911bdcdbdc",
          "Name": "average",
          "Description": "Average of the list of numbers.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Averages a list of numbers.\n\nMath.Average (numbers: double[]): double"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "139c0088c09e46d8b02912f860d6d98f",
      "Inputs": [
        {
          "Id": "d25b7e200992457fbdc412be283cec98",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cec577d5a18a4a45ba6bfe1794631710",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = [x/1000.0 - IN[1] + IN[2] for x in IN[0]]",
      "VariableInputPorts": true,
      "Id": "fdddce30b2ab4a47b43c0df16bdd90c2",
      "Inputs": [
        {
          "Id": "0494a58620e146e48e29a9c54478999c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "45137f14d39b415a8983051aa461b76d",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6f2c0744dfee4ec283e5400605e8a5f8",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6fc3e66da4f0489bb5688551130f5fd7",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    }
  ],
  "Connectors": [
    {
      "Start": "0a0ebb0ac1e345b6b89fa1bdcb01bdc5",
      "End": "a3be0db894a847349b60e7b9e9d2b530",
      "Id": "d5d6c1f43a6c482989af2a5c878ab14f"
    },
    {
      "Start": "d9df028e5fb542c08b3620e31ff9b047",
      "End": "91cf8f0362b14399a651cde52f33c290",
      "Id": "b4e17698e2b941fab6437f70af87acb8"
    },
    {
      "Start": "241fb658565d445ba09b7b72c2fdecb0",
      "End": "78f731fab97f452e8f495962ceddb6b8",
      "Id": "5c832cc4e5ec4119bf7bd6d7d8a867d9"
    },
    {
      "Start": "de40c2c208744d42a4b2f4f7294d1bea",
      "End": "b078f5939d2b4d3a96dc3d5c92103293",
      "Id": "605b5bdaa23e48aa88e5cc0bac3641a1"
    },
    {
      "Start": "de40c2c208744d42a4b2f4f7294d1bea",
      "End": "90820bf44b954a1ab77257bcfdc0c94a",
      "Id": "079d5ad3ae1d46bb892424aa3ffc5da4"
    },
    {
      "Start": "fca8c654f90e42c59556ce9c2582e5d5",
      "End": "c81df43cb3da4f529fca1489544db57f",
      "Id": "8a2e26c61b334d6096cae604970a69ea"
    },
    {
      "Start": "fca8c654f90e42c59556ce9c2582e5d5",
      "End": "5f5458c1beca439aa17d9bc14977ed0a",
      "Id": "93aa614584da4cc580de8af659e0e3dc"
    },
    {
      "Start": "fca8c654f90e42c59556ce9c2582e5d5",
      "End": "34f58a25cd3c4cf09c4eb90acc993301",
      "Id": "b53e95bf954b4fdaa1d4fe6b96439039"
    },
    {
      "Start": "64e41a0a14274e6581044205a3f97cf5",
      "End": "7e40748978a24b6dabcddcdb65f2986d",
      "Id": "7651ad91722e498ab5b6cd3c3be192e2"
    },
    {
      "Start": "64e41a0a14274e6581044205a3f97cf5",
      "End": "5d74a82aa2be4710a89fe1f76580e1ae",
      "Id": "b8242ecc077c4b13bc722442e4da8abe"
    },
    {
      "Start": "64e41a0a14274e6581044205a3f97cf5",
      "End": "b79bcc3fa0cf416aa20f0f2461a1913f",
      "Id": "aade056542f54cf6a3ff6ed2b77575ce"
    },
    {
      "Start": "b3a19fbec18e49a1a085bbf96c9e06bd",
      "End": "7011fd5610674918ae017bbc0bcf92a2",
      "Id": "5cfa4d53911a4c7aa50772949949d638"
    },
    {
      "Start": "f4f74b0799184a78adfa99e7afe76ad4",
      "End": "abf13f95732846dfae453e622d90bd0d",
      "Id": "478a096a4bba47f5b5b2d4f261ff4be2"
    },
    {
      "Start": "7c2097019c0943bc9b8e744648b5e5bc",
      "End": "59fabd84e7284f8c99a0dc4c5fac6832",
      "Id": "5fdaeff0c95145c4bc0c1b8a6c46f4cc"
    },
    {
      "Start": "61b923d1af5e42ec88fbee05421be92a",
      "End": "3f1404b87ae64ea9ac408099ef959467",
      "Id": "e11524c8b6ab4233ae3af6e5f8c7b7a0"
    },
    {
      "Start": "2a045795849a4060b8bf8cb8eb130614",
      "End": "a3f77ea085934af3aec7058c9e1323bd",
      "Id": "d365fa580ff846829d23688e71ef9b80"
    },
    {
      "Start": "13df2ff490964ff197dab0e8e4d1f327",
      "End": "6193f089fec1469cac822b4ca70107ef",
      "Id": "78e46fd1114641999c02cd9dcf92706b"
    },
    {
      "Start": "eccd7aae8c914335bad3e1b18bb61cf6",
      "End": "b46f2a0d14024e87b5bfcc5fc15e01ea",
      "Id": "b7234b5bb21549ff942c0e54b93772bc"
    },
    {
      "Start": "2643f17271804359a0a3b1e94f42e627",
      "End": "afd7f1bcfe7f4b25ba0890791d2d989a",
      "Id": "f8b59c7da0f74f628dd8bf51c31acd32"
    },
    {
      "Start": "f599b7d77df243e387f0ba28b81b3a7a",
      "End": "9fa9fecd40a34816b944641a2cc07993",
      "Id": "1dbd330ce05f498a9f40feaa6fbb40c1"
    },
    {
      "Start": "f599b7d77df243e387f0ba28b81b3a7a",
      "End": "c3d9c08f302540d580b1b5c9c2fd0ede",
      "Id": "54fc7e0cda8e4bc2b35c3ce744167e6f"
    },
    {
      "Start": "f599b7d77df243e387f0ba28b81b3a7a",
      "End": "e613e9dcbd114f548d6e3bdfb8e36ead",
      "Id": "6850aa9714e043938ac6c6c71298c782"
    },
    {
      "Start": "b7f2b3c5d0a74ed694a1a1a734c3171e",
      "End": "1ebe6fc02a7e4ec7b532d31be15798d6",
      "Id": "c8d1bfbc57e6438e926b6b97147d908f"
    },
    {
      "Start": "65e5b6c7e6494a4da68378f8d7f8d590",
      "End": "611f7e4328334b6ab8b65ac7696a0a5a",
      "Id": "63f0b1881e1646c7b3f7b9e993821eb7"
    },
    {
      "Start": "1974d97eaf8945fc9db9c37b3a83d9e6",
      "End": "8db69a6bce9e4e9797bd5e43c8b5c79c",
      "Id": "f2ef87436e1d4ead803efe6118e25135"
    },
    {
      "Start": "971b9be070d2426e8e8e1fc5b9f7d56c",
      "End": "455a66e4436a4ec783923a0522c7a94e",
      "Id": "4717db1e31f945d28ea8b713c76202ff"
    },
    {
      "Start": "33c711fd03e748659f3d5807a22219d2",
      "End": "e69d25e95ad84ed0a78b0dcdd5f4bee3",
      "Id": "168957f2e3644e5084e3fbd646e3cfa7"
    },
    {
      "Start": "33c711fd03e748659f3d5807a22219d2",
      "End": "0494a58620e146e48e29a9c54478999c",
      "Id": "15f3ee0aa4124960b9356364128ae5aa"
    },
    {
      "Start": "3aed618542a44d729c6f01f580353ba7",
      "End": "638af41625b8462fae6b550713d1c941",
      "Id": "667cfff960cd4820b5c1cd048016fc96"
    },
    {
      "Start": "e60e4c720c8f4d8a80c26d5da4ca622f",
      "End": "b19959bd132149329cab561c7a5fc96a",
      "Id": "2a12d9b99bd04103a03aa769f22425f1"
    },
    {
      "Start": "e60e4c720c8f4d8a80c26d5da4ca622f",
      "End": "3e9274089bd346bc97c64f8accde0002",
      "Id": "d429a9a4b9804f9e82a3571323936e92"
    },
    {
      "Start": "c9fc388662d842149d711e142e0530e0",
      "End": "7ea2ce70a9de44febf6a835016f90dc9",
      "Id": "c0bdc29c210045ccbc76cc7961a4aae7"
    },
    {
      "Start": "d43a2f4e745a4e2b9e562be1489c486c",
      "End": "4879e18a72e5479ebbf2edea39994a9c",
      "Id": "5daa7f858e1a4bd2b6a2c986da6f4751"
    },
    {
      "Start": "88e8041a54604ff8ba375b9cfd5662a0",
      "End": "9f00bb9dd3d44371a045091fcc052e8b",
      "Id": "3ac76c1c798d46cab6b901de82a5ee53"
    },
    {
      "Start": "eb5894cace8548d29b69512620ade706",
      "End": "3c0192c262364364bb0ee7bcf36be6c1",
      "Id": "af53e601b24b45b69d7894b22d40b644"
    },
    {
      "Start": "926bfef2f07242dfb3a5a9b3d0bec7eb",
      "End": "7c4545ac260a4072a0591301e8a7f857",
      "Id": "aa49739745cb4352a2cac98fa614bdff"
    },
    {
      "Start": "034f84d6caa644e1972e76f7b410fc9d",
      "End": "3784a84b319d471a8729a74599772835",
      "Id": "34562cfbb13a4f368b6b7b68101ae97b"
    },
    {
      "Start": "e071848f80fe48b0a112325f3e213572",
      "End": "7acc6cd4ea464411beaf1cd4783e30b9",
      "Id": "671dba51fee740748d9478d14ba1cd60"
    },
    {
      "Start": "4e891484dc194a32a9dd31a4aed88f2a",
      "End": "8df9f89bb3824625ac24b7156cc6b314",
      "Id": "e84286c671294747af668c1af3f27112"
    },
    {
      "Start": "cb9c087a81824a3689449d9e52bf0493",
      "End": "62b618400e6b499895eb1452b084ef34",
      "Id": "8eee28a7af8e4ce1a1b280a54bfd45bc"
    },
    {
      "Start": "691dbc9519e14bd789c556455f4c96d5",
      "End": "f2a3ff36976f4cc5bb95473827fd4eeb",
      "Id": "f58bd1152949452e8036882071e8e926"
    },
    {
      "Start": "5c8a92b334ac4455a3718ebc1dff09ad",
      "End": "a35b525f30204a59834a25e6fdf39284",
      "Id": "9155ff99a18a4edb9d19ee69b3dcccd5"
    },
    {
      "Start": "961835897653404ba27b00974b0e8805",
      "End": "fd60dc394c6c4aae9666eecbb55fcbac",
      "Id": "3a2d704c057f4ae2a49add0b219874be"
    },
    {
      "Start": "b56822d452184977b4b87193131337af",
      "End": "c7fe272ae0404308aeee82de0505cb59",
      "Id": "00fa5092422f4ce29054553d58444307"
    },
    {
      "Start": "5ab1f4b654d14fafa9718f947867efd7",
      "End": "0c0a3e7228f345ee9f8b54100a749609",
      "Id": "2febba7e954c4388a9f3f1dbe416bb16"
    },
    {
      "Start": "5ab1f4b654d14fafa9718f947867efd7",
      "End": "45137f14d39b415a8983051aa461b76d",
      "Id": "16bacd56d52b4727a292b2197b6c29ba"
    },
    {
      "Start": "da62afcbf72848c6bb36bccec624112c",
      "End": "b897aa142a8a40e88053782bcbe994e2",
      "Id": "a341a7bccaba4200babdb1a3c61ed172"
    },
    {
      "Start": "e882d699be5e4131b9b15af5095da6fa",
      "End": "0878e191b0ec4c2b91bc9cd1c838d3c5",
      "Id": "b77d9a704cba404eae356ea8510b1d79"
    },
    {
      "Start": "e882d699be5e4131b9b15af5095da6fa",
      "End": "6f2c0744dfee4ec283e5400605e8a5f8",
      "Id": "14d69e283f3c4d2e9875661cb02ca140"
    },
    {
      "Start": "59628490b87a4c8ea9e6a0911bdcdbdc",
      "End": "d25b7e200992457fbdc412be283cec98",
      "Id": "d4c4592b3e4f4b6bab7a6343c110ecdc"
    },
    {
      "Start": "6fc3e66da4f0489bb5688551130f5fd7",
      "End": "7de13b85a24a4d36bba5670c9488eb81",
      "Id": "b74b5d6d8243410ab22d63f062f93360"
    }
  ],
  "Dependencies": [
    "46a3a667-ec7a-49ed-8675-ed77333ecd8e"
  ],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.0.1.5055",
      "RunType": "Automatic",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 77355.1628889585,
      "EyeY": 83264.410797586839,
      "EyeZ": -104710.54759898318,
      "LookX": -20482.280831994984,
      "LookY": -9326.4272069805884,
      "LookZ": 11926.060914820191,
      "UpX": -0.13667726094551635,
      "UpY": 0.98741377501406391,
      "UpZ": 0.079582014782698232
    },
    "NodeViews": [
      {
        "ShowGeometry": false,
        "Name": "PAD",
        "Id": "2e5a1c04039840818262ceb733992b77",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -659.0286682778426,
        "Y": 214.55746655461576
      },
      {
        "ShowGeometry": false,
        "Name": "List.Flatten",
        "Id": "1b2c0198a31449f0a91b723b26decb72",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 345.31174368414122,
        "Y": 8.9221494636987018
      },
      {
        "ShowGeometry": true,
        "Name": "Topography.Points",
        "Id": "2c556b02c4fa4f6fbcadabb78bfd3b82",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 280.64075314889214,
        "Y": -371.33749259395694
      },
      {
        "ShowGeometry": false,
        "Name": "TOPO",
        "Id": "79706b4eeb14427bb66573b8786e3b2d",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -52.17581715728204,
        "Y": -461.47402676023722
      },
      {
        "ShowGeometry": true,
        "Name": "Gradingtool",
        "Id": "87fdb60b9fe24224b049e04b2f2cc29c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 882.71888691318554,
        "Y": -506.25669227782078
      },
      {
        "ShowGeometry": true,
        "Name": "Surface.PerimeterCurves",
        "Id": "af49de498a66466697546360918b36e8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -316.75497425850438,
        "Y": 85.940042958923186
      },
      {
        "ShowGeometry": false,
        "Name": "Curve.StartPoint",
        "Id": "4d99d73b044143e7b9c9d7f9a9583554",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 49.302817576882262,
        "Y": 93.043572268135676
      },
      {
        "ShowGeometry": false,
        "Name": "PAD",
        "Id": "08583251138541a7995014b3d74ff2de",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -639.75544326086674,
        "Y": -204.70151559498424
      },
      {
        "ShowGeometry": true,
        "Name": "Surface.PerimeterCurves",
        "Id": "44117eaf542b4ab58a1aa05456402a6e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -225.68846438734028,
        "Y": -111.07479382938106
      },
      {
        "ShowGeometry": false,
        "Name": "Curve.StartPoint",
        "Id": "8c83a87c0f794420979a5c8a8e02d398",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 46.991329900845585,
        "Y": -150.8793311045406
      },
      {
        "ShowGeometry": false,
        "Name": "List.Flatten",
        "Id": "6637a91e0ba04c17a7f2271f9bc619d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 326.39132309861361,
        "Y": -224.81478484464196
      },
      {
        "ShowGeometry": true,
        "Name": "_run",
        "Id": "b658e98f8d3f4fa6ad2e950ececc33df",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 338.01510975160915,
        "Y": -1005.2172196463304
      },
      {
        "ShowGeometry": true,
        "Name": "Integer Slider",
        "Id": "b1dffc12a6804069aada8a57a020c5c0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1139.8180946024509,
        "Y": -568.7301709099537
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "8506f1c5e06e4bb694391a0300e29d97",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1474.6413003350422,
        "Y": -574.05553054447682
      },
      {
        "ShowGeometry": true,
        "Name": "",
        "Id": "22379a2e8bde4ea292d86e1849c6c6ba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1715.1425614786751,
        "Y": -573.89693876505191
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "9f29c7af148148879e2ce8db1a692969",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2212.8897009245038,
        "Y": -793.4462002268217
      },
      {
        "ShowGeometry": true,
        "Name": "Integer Slider",
        "Id": "7b9815f386d04433a25ba160a0539730",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1852.5336562616064,
        "Y": -799.06110391982929
      },
      {
        "ShowGeometry": true,
        "Name": "Integer Slider",
        "Id": "d6c24cfd5e3b4d609e6b8e2507038f55",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1853.1983250396556,
        "Y": -609.78774118789238
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "fe2f36ada0c7412492f09bcc9360fe76",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2217.5819874009253,
        "Y": -640.1233522814457
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "4cc229eaab5249c69797cccbbdba72f1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2210.5568261684639,
        "Y": -482.42506807474285
      },
      {
        "ShowGeometry": true,
        "Name": "Integer Slider",
        "Id": "b438d79b97e74c3cbcbdb206d2249e2d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1872.933555157224,
        "Y": -344.44716927479226
      },
      {
        "ShowGeometry": true,
        "Name": "Point.ByCoordinates",
        "Id": "0b8944adcb8d41ffa759cd773d097c13",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2532.4589827573054,
        "Y": -681.04765641584322
      },
      {
        "ShowGeometry": true,
        "Name": "Integer Slider",
        "Id": "26324bb7bdbc4312a557cdeaafc6625a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1157.8623808212285,
        "Y": 28.24332845932588
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "c374fa2f1d2c4f959945105f8ab246b1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1512.0984203032301,
        "Y": -3.9370860207371834
      },
      {
        "ShowGeometry": true,
        "Name": "Grade Plane Average",
        "Id": "012e195f025647558ed398191a52f8ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2763.2027749472136,
        "Y": -46.206802954027154
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "a0e47439c03945099a4d390d3060a4e1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1129.3222263419138,
        "Y": -1297.9330054103141
      },
      {
        "ShowGeometry": true,
        "Name": "Topography.Mesh",
        "Id": "048030181b534e01ab99436aef7d2cab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 253.82489856273583,
        "Y": -661.42148733412387
      },
      {
        "ShowGeometry": true,
        "Name": "Perpendicular_Distance",
        "Id": "c2896c560bf644b696bed641d73672d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 299.00077116527291,
        "Y": -903.58728745572478
      },
      {
        "ShowGeometry": true,
        "Name": "Resolution_Distance",
        "Id": "c113a854d4e24036b3fad6e54baa29ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 324.77575698968747,
        "Y": -829.48169711364892
      },
      {
        "ShowGeometry": true,
        "Name": "List.RemoveItemAtIndex",
        "Id": "e91c90cbe87845219bfa144bcdbc219e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -163.71940066941988,
        "Y": 796.71202910434874
      },
      {
        "ShowGeometry": true,
        "Name": "Number Slider",
        "Id": "c2b941b44660440696dd917502308082",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -607.71642981054686,
        "Y": 1004.6732143587667
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "43076030a3524459aeb5a7b4eda9a4f7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 218.83458337049228,
        "Y": 1025.9263868364085
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "222440153ca44b50aca986861d3d0ef5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -101.05312353425279,
        "Y": 1025.3923793156939
      },
      {
        "ShowGeometry": true,
        "Name": "List.FirstItem",
        "Id": "3a4604e7b321492ea124507725c8bbd1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -481.59396826790476,
        "Y": 856.005157773949
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "f9ba0b5473374359bfb2e234eddffca6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1830.6821268739739,
        "Y": -182.26605666925786
      },
      {
        "ShowGeometry": true,
        "Name": "BaseDist",
        "Id": "90fd55c61b6c46eea5004a26621722a2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1645.1823301001355,
        "Y": -155.86340135512094
      },
      {
        "ShowGeometry": true,
        "Name": "Polygon.ByPoints",
        "Id": "fcb773172143422095e0cb3c44ad7407",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2820.39821878587,
        "Y": -915.364132912942
      },
      {
        "ShowGeometry": true,
        "Name": "Updater",
        "Id": "bfd8d254a8714147b81115c7ebfea5a5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 782.44790848677223,
        "Y": -1228.8198117570234
      },
      {
        "ShowGeometry": true,
        "Name": "Boolean",
        "Id": "3959e99c4d8e4688ba50c1ccf093fa2e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 544.82692163552224,
        "Y": -1254.5992154873031
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "82410959937f4754afb4d06016016a63",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 950.29969164643569,
        "Y": -1227.8936660021598
      },
      {
        "ShowGeometry": true,
        "Name": "conda path",
        "Id": "d2831a9be8fd44d6bbf5870c9eaee35b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 595.71631788902152,
        "Y": -1185.35985688027
      },
      {
        "ShowGeometry": true,
        "Name": "Lowest Point",
        "Id": "1549e08d4041455c9c5fdabe46c36f90",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2783.8668161251903,
        "Y": 78.457611578515639
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "9a407e67b9b9487bb06280ee05c6f185",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3130.5132465731122,
        "Y": -30.28846067184611
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "aedd83cce8974795b845e298f4694422",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3355.5837994746989,
        "Y": -27.836748362557842
      },
      {
        "ShowGeometry": true,
        "Name": "Add ref height for sea level here",
        "Id": "9ca1c0b9fdbf4fb5b346218b176dbea1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2705.3118767219544,
        "Y": 201.18310956008111
      },
      {
        "ShowGeometry": true,
        "Name": "Springs.Watch+",
        "Id": "7700cdf381b74ae48179cb2cecfe07b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1122.1261601223162,
        "Y": -833.6485161521033
      },
      {
        "ShowGeometry": true,
        "Name": "Math.Average",
        "Id": "3cf4b5b51eea4a898349c507fbe7e40c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3036.3628013887605,
        "Y": -222.55936932351307
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "139c0088c09e46d8b02912f860d6d98f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3340.3946763558215,
        "Y": -229.65425586784625
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "fdddce30b2ab4a47b43c0df16bdd90c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2792.8002336763593,
        "Y": -219.48331414592269
      }
    ],
    "Annotations": [],
    "X": -1554.9566927413457,
    "Y": 654.19123626123962,
    "Zoom": 0.74599495600279842
  }
}